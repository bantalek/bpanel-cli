/**
  decorator for the plugins reducer
  this will extend the current plugins reducer
  which is used as a catchall for plugins
  that want their own reducer
  make sure to replace the constants
  and prop names with your actual targets

  NOTE: state uses `seamless-immutable` to ensure immutability
  See their API Docs for more details (e.g. `set`)
  https://www.npmjs.com/package/seamless-immutable
**/
export const reducePlugins = (state, action) => {
  const { type, payload } = action;
  switch (type) {
    // case 'ACTION_CONSTANT': {
    //   return state.set('testProp', payload);
    //   break;
    // }

    default:
      return state;
  }
};